#pragma once
#include <array>
#include <iterator>

namespace Day24 {

  constexpr auto compute_decompiled(std::input_iterator auto input_it) -> std::array<int, 4> {
    std::array<int, 4> registers{};
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 12;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 6;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 11;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 12;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 10;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 5;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 10;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 10;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -16;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 7;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 14;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 0;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 12;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 4;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -4;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 12;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 1;
    registers[1] += 15;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 14;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -7;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 13;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -8;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 10;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -4;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 11;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -15;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 9;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    registers[0] = *(input_it++);
    registers[1] *= 0;
    registers[1] += registers[3];
    registers[1] %= 26;
    registers[3] /= 26;
    registers[1] += -8;
    registers[1] = (registers[1] == registers[0]);
    registers[1] = (registers[1] == 0);
    registers[2] *= 0;
    registers[2] += 25;
    registers[2] *= registers[1];
    registers[2] += 1;
    registers[3] *= registers[2];
    registers[2] *= 0;
    registers[2] += registers[0];
    registers[2] += 9;
    registers[2] *= registers[1];
    registers[3] += registers[2];
    return registers;
  }

}
